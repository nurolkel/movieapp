{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","utils/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","utils/useMovieFetch.js","components/NotFound.js","styles/GlobalStyles.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","API","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","movies","prev","setItem","useHomeFetch","console","log","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyles","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99862606.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        width: 80px;\r\n    }\r\n`;","import React from 'react';\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n// Images\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\n// Styles\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <LogoImg src={RMDBLogo} alt='rmdb-logo' />\r\n            </Link>\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo'/>\r\n        </Content>\r\n    </Wrapper>\r\n)\r\n\r\n\r\n\r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: linear-gradient(\r\n        to bottom, rgba(0,0,0,0)\r\n        41%, rgba(0,0,0,0.65)\r\n        100%\r\n    ),\r\n    url(${({ image}) => image}), var(--darkGrey);\r\n    background-size: 100%, cover;\r\n    background-position: center;\r\n    height: 600px;\r\n    position: relative;\r\n    animation: animateHeroImage 1s;\r\n\r\n    @keyframes animateHeroImage {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 20px;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    z-index: 50;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n\r\n    h1 {\r\n        font-size: var(--fontSuperBig);\r\n\r\n        @media screen and (max-width: 720px) {\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: var(--fontMed);\r\n\r\n        @media screen and (max-width: 720px) {\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n        font-size: var(--fontSmall);\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n}\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    h1 {\r\n        color: var(--medGrey);\r\n\r\n        @media screen and (max-width: 768px) {\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 2rem;\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>\r\n            {children}\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\n// Don't need to check the Children Prop because it is part of React\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string,\r\n}\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.5s;\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n    @keyframes animateThumb {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Routing\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb' />\r\n            </Link> \r\n        ): (\r\n            <Image src={image} alt='movie-thumb' />\r\n        )}\r\n    </div>\r\n);\r\n\r\nThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieid: PropTypes.number,\r\n    clickable: PropTypes.bool,\r\n}\r\n\r\nexport default Thumb;","import { Spinner } from './Spinner.styles';\r\n\r\nexport default Spinner;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg) ;\r\n        }\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 55px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img {\r\n        position: absolute;\r\n        left: 15px;\r\n        top: 14px;\r\n        width: 30px;\r\n    }\r\n\r\n    input {\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 8px 0;\r\n        padding: 0 0 0 60px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n        :focus {\r\n            outline: none;\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n// Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n// Styles\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n\r\n    const [state, setState] = useState('')\r\n    const initial = useRef(true);\r\n    // useRef won't trigger at render\r\n    // Instead of running the search through the state variable, we put it in the setSearchTerm for a slight pause\r\n    useEffect(() => {\r\n        if (initial.current) {\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        const timer = setTimeout(()=> {\r\n            setSearchTerm(state);\r\n        },500)\r\n\r\n        return () => clearTimeout(timer);\r\n    },[setSearchTerm, state])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon' />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Search Movie\"\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    setSearchTerm: PropTypes.func,\r\n}\r\n\r\nexport default SearchBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        opacity: 0.8s;\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Styles\r\nimport { Wrapper } from './Button.styles'\r\n\r\nconst Button = ({ text, callback }) => (\r\n    <Wrapper type=\"button\" onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func,\r\n}\r\n\r\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst API = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default API;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n\n  return sessionState && JSON.parse(sessionState);\n}","import { useState, useEffect, useRef } from 'react';\r\n// API\r\nimport API from '../API';\r\n\r\n// Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n    \r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n    \r\n    const fetchMovies = async (page, searchTerm = \"\") => {\r\n        try {\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm,page)\r\n            \r\n    // We fetch the movies, spread the movies object and update the results \r\n            setState(prev => ({\r\n                ...movies,\r\n                results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }))\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    // Initial and Search\r\n    useEffect(() => {\r\n\r\n        if (!searchTerm) {\r\n            const sessionState = isPersistedState('homeState')\r\n\r\n            if (sessionState) {\r\n                setState(sessionState);\r\n                return;\r\n            }\r\n        }\r\n\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm);\r\n    }, [searchTerm])\r\n\r\n    // Load More\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isLoadingMore) {\r\n            return;\r\n        }\r\n\r\n        fetchMovies(state.page + 1, searchTerm);\r\n        setIsLoadingMore(false);\r\n\r\n    },[isLoadingMore, searchTerm, state.page])\r\n\r\n    // Write to sessionStorage\r\n    \r\n    useEffect(() => {\r\n        \r\n        if (!searchTerm) {\r\n            sessionStorage.setItem('homeState', JSON.stringify(state))\r\n        }\r\n\r\n    },[searchTerm, state])\r\n\r\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react'\r\n\r\n// Config\r\nimport { POSTER_SIZE, \r\n    BACKDROP_SIZE, \r\n    IMAGE_BASE_URL } from '../config'\r\n\r\n// Components \r\nimport HeroImage from './HeroImage';\r\nimport Grid from './Grid';\r\nimport Thumb from './Thumb';\r\nimport Spinner from './Spinner';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Button';\r\n// Hook\r\nimport { useHomeFetch } from '../utils/useHomeFetch';\r\n\r\n// Image \r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Home = ()=> {\r\n\r\n    const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } = useHomeFetch();\r\n\r\n    console.log(state)\r\n\r\n    if (error) {\r\n        return <div>Something Went Wrong...</div>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {!searchTerm && state.results[0] && \r\n            <HeroImage \r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                title={state.results[0].original_title}\r\n                text={state.results[0].overview}\r\n            />\r\n            }\r\n            <SearchBar setSearchTerm={setSearchTerm} />\r\n            <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n                {state.results.map(movie => ( \r\n                    <Thumb \r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path \r\n                            : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {loading && <Spinner />}\r\n            {state.page < state.total_pages && !loading && (\r\n                <Button text='Load More' callback={() => setIsLoadingMore(true)} />\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 70px;\r\n    background: var(--medGrey);\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n\r\n    span {\r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n\r\n        @media screen and (max-width: 768px) {\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n// Styles\r\nimport { Wrapper, Content } from './BreadCrumb.styles';\r\n\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <span>Home</span>\r\n            </Link>\r\n            <span>|</span>\r\n            <span>{movieTitle}</span>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n    movieTitle: PropTypes.string,\r\n}\r\n\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\n\r\nexport const Wrapper = styled.div`\r\n    background: ${({ backdrop }) => \r\n        backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop} ')` \r\n    : '#000'};\r\n    background-size: cover;\r\n    background-position: center;\r\n    padding: 40px 20px;\r\n    animation: animateMovieInfo 1s;\r\n\r\n    @keyframes animateMovieInfo {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    background: rgba(0,0,0,0.7);\r\n    border-radius: 20px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        display: block;\r\n        max-height: none;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    width: 100%;\r\n    padding: 20px 40px;\r\n    color: var(--white);\r\n    overflow: hidden;\r\n\r\n    .rating-directors {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .score {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 35px;\r\n        height: 35px;\r\n        background: var(--white);\r\n        color: #000;\r\n        font-weight: 800;\r\n        border-radius: 50%;\r\n        margin: 0;\r\n    }\r\n\r\n    .director {\r\n        margin: 0 0 0 40px;\r\n\r\n        p {\r\n            margin: 0;\r\n        }\r\n    }\r\n\r\n    h1 {\r\n        @media screen and (max-width: 768px) {\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Components\r\nimport Thumb from '../Thumb';\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n// Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n// Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n        <Content>\r\n            <Thumb \r\n                image={\r\n                    movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                    : NoImage\r\n                }\r\n                clickable={false}\r\n                alt='movie-thumb'\r\n            />\r\n            <Text>\r\n                <h1>{movie.title}</h1>\r\n                <h3>Plot</h3>\r\n                <p>{movie.overview}</p>\r\n                <div className=\"rating-directors\">\r\n                    <div>\r\n                        <h3>Rating</h3>\r\n                        <div className=\"score\">{movie.vote_average}</div>\r\n        ,            </div>\r\n                    <div className=\"director\">\r\n                        <h3>Director{movie.directors.length > 1 ? 'S': ''}</h3>\r\n                        {movie.directors.map(director => (\r\n                            <p key={director.credit_id}>{director.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object,\r\n}\r\n\r\nexport default MovieInfo;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    margin: 0 auto;\r\n\r\n    .column {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: var(--medGrey);\r\n        border-radius: 20px;\r\n        margin: 0 20px;\r\n        flex: 1;\r\n\r\n        :first-child {\r\n            margin-left: 0;\r\n        }\r\n\r\n        :last-child {\r\n            margin-right: 0;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        display: block;\r\n\r\n        .column {\r\n            margin: 20px 0;\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// Helper Functions\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n// Styles\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => ( \r\n    <Wrapper>\r\n        <Content>\r\n            <div className=\"column\">\r\n                <p>Running Time: {calcTime(time)}</p>\r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Budget: {convertMoney(budget)}</p>\r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Revenue: {convertMoney(revenue)}</p>\r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number,\r\n}\r\n\r\nexport default MovieInfoBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    color: var(--white);\r\n    background: var(--darkGrey);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n\r\n    h3 {\r\n        margin: 10px 0 0 0;\r\n    }\r\n\r\n    p {\r\n        margin: 5px 0;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Styles\r\nimport { Wrapper, Image } from './Actor.styles';\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n    <Wrapper>\r\n        <Image src={imageUrl} alt=\"actor-thumb\" />\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n);\r\n\r\n\r\nActor.propTypes = {\r\n    name: PropTypes.string,\r\n    character: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n}\r\n\r\nexport default Actor;","import React from \"react\";\r\n\r\n// Router\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n// Components\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from \"./Actor\";\r\n\r\n// Hook\r\nimport { useMovieFetch } from \"../utils/useMovieFetch\";\r\n// Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n\r\n    const { movieId } = useParams();\r\n\r\n    const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n    if (loading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Something Went Wrong...</div>\r\n    }\r\n\r\n    console.log(movie);\r\n    return ( \r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time={movie.runtime} \r\n                budget={movie.budget} \r\n                revenue={movie.revenue} \r\n            />\r\n            <Grid header='Actors'>\r\n                {movie.actors.map(actor => (\r\n                    <Actor \r\n                        key={actor.credit_id}\r\n                        name={actor.name}\r\n                        character={actor.character}\r\n                        imageUrl={\r\n                            actor.profile_path \r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                            : NoImage\r\n                        }\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;","import { useState, useEffect } from 'react';\r\nimport API from '../API';\r\n\r\n// Helpers\r\nimport { isPersistedState } from '../helpers';\r\n\r\n\r\n\r\nexport const useMovieFetch = movieId => {\r\n    \r\n    const [state,setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchMovie = async () => {\r\n            try {\r\n\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId)\r\n                // Get directors only\r\n                const directors = credits.crew.filter(member => member.job === 'Director');\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors,\r\n                })\r\n                setLoading(false)\r\n\r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        }\r\n\r\n        const sessionState = isPersistedState(movieId);\r\n\r\n        if (sessionState) {\r\n            setState(sessionState);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        // Invoke fetchMovie();\r\n        fetchMovie();\r\n\r\n    }, [movieId])\r\n\r\n    // Write to sessionStorage\r\n\r\n    useEffect(() => {\r\n        sessionStorage.setItem(movieId, JSON.stringify(state));\r\n\r\n    }, [movieId, state])\r\n\r\n    return { state, loading, error}\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => <div>404</div>;\r\n\r\nexport default NotFound;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport  const GlobalStyles = createGlobalStyle`\r\n    :root {\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Abel', sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        \r\n        h1 {\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white)\r\n        }\r\n\r\n        h3 {\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n        }\r\n\r\n        p {\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n    }\r\n`","import React from 'react';\n// Router\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// Components\nimport Header from './components/Header/index';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n// Styles\nimport { GlobalStyles } from '../src/styles/GlobalStyles';\n\n\nconst App = () => ( \n      <Router>\n        <GlobalStyles />\n        <Header />\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/:movieId' element={<Movie />} />\n          <Route path='/*' element={<NotFound />} />\n        </Routes>\n      </Router>\n  );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}